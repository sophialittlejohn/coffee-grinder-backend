// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int             @id @default(autoincrement())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt @map(name: "updated_at")
  name           String?
  email          String          @unique
  password       String
  primaryMachine Int?
  coffeeMachines CoffeeMachine[] @relation("MyRelationTable")
}

model Coffee {
  id                      Int               @id @default(autoincrement())
  name                    String
  rating                  Int?
  createdAt               DateTime          @default(now())
  updatedAt               DateTime          @updatedAt @map(name: "updated_at")
  coffeeMachineId         Int?
  coffeeMachine           CoffeeMachine?    @relation(fields: [coffeeMachineId], references: [id])
  prices                  Prices[]
  configurations          Configurations[]
  photo                   CloudinaryImage   @relation(fields: [cloudinaryImageAsset_id], references: [asset_id])
  cloudinaryImageAsset_id String
  address                 AddressGoogleMaps @relation(fields: [addressGoogleMapsId], references: [id])
  addressGoogleMapsId     Int
}

model AddressGoogleMaps {
  id            Int      @id @default(autoincrement())
  street        String
  street_number String
  city          String
  postal_code   String
  country       String
  lng           Int
  lat           Int
  Coffee        Coffee[]
}

model Prices {
  id        Int      @id @default(autoincrement())
  grams     Int
  price     String
  Coffee    Coffee?  @relation(fields: [coffeeId], references: [id])
  coffeeId  Int?
  createdAt DateTime @default(now())
}

model Configurations {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  amount    String
  size      String
  status    Status
  Coffee    Coffee?  @relation(fields: [coffeeId], references: [id])
  coffeeId  Int?
}

model CoffeeMachine {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  brand       String
  coffeeTried Coffee[]
  name        String
  users       User[]   @relation("MyRelationTable")
  createdAt   DateTime @default(now())
}

model CloudinaryImage {
  asset_id          String   @unique @default(uuid())
  public_id         String
  version           Int
  version_id        String
  signature         String
  width             Int
  height            Int
  format            String
  resource_type     String
  created_at        String
  // tags
  bytes             Int
  type              String
  etag              String
  placeholder       Boolean
  url               String
  secure_url        String
  access_mode       String
  original_filename String
  // original_extension String
  Coffee            Coffee[]
}

enum Status {
  PERFECT
  TOO_LATE
  TOO_EARLY
  NONE
}
